### **ЁЯУЦ Chapter 3: Web Vulnerabilities (рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреА рдХрдордЬреЛрд░рд┐рдпрд╛рдБ рдФрд░ рдЕрдЯреИрдХ рдореЗрдердбреНрд╕)**  
_(Web Applications рдореЗрдВ рд╣реЛрдиреЗ рд╡рд╛рд▓реА Common Security Vulnerabilities)_  

---
## **ЁЯФН 1. Web Vulnerabilities рдХреНрдпрд╛ рд╣реЛрддреА рд╣реИрдВ?**  
Web Vulnerabilities рдЙрди **рдХрдордЬреЛрд░рд┐рдпреЛрдВ (Weaknesses)** рдХреЛ рдХрд╣рддреЗ рд╣реИрдВ рдЬрд┐рдирдХрд╛ рдлрд╛рдпрджрд╛ Hackers рдЙрдард╛рдХрд░ рд╡реЗрдмрд╕рд╛рдЗрдЯ рдореЗрдВ рдШреБрд╕ рд╕рдХрддреЗ рд╣реИрдВ рдпрд╛ Sensitive Data рдЪреБрд░рд╛ рд╕рдХрддреЗ рд╣реИрдВред  

ЁЯСЙ рд╕рдмрд╕реЗ Common Web Vulnerabilities:  
1я╕ПтГг **Cross-Site Scripting (XSS)**  
2я╕ПтГг **SQL Injection (SQLi)**  
3я╕ПтГг **Cross-Site Request Forgery (CSRF)**  
4я╕ПтГг **Server-Side Request Forgery (SSRF)**  
5я╕ПтГг **IDOR (Insecure Direct Object Reference)**  
6я╕ПтГг **Broken Authentication & Session Management**  
7я╕ПтГг **Security Misconfigurations**  

рдЕрдм рд╣рдо рдПрдХ-рдПрдХ рдХрд░рдХреЗ рдЗрдиреНрд╣реЗрдВ Detail рдореЗрдВ рд╕рдордЭреЗрдВрдЧреЗред  

---

## **1я╕ПтГг Cross-Site Scripting (XSS) - JavaScript Injection Attack**  
ЁЯТб **XSS рдПрдХ рдРрд╕рд╛ рдЕрдЯреИрдХ рд╣реИ рдЬрд┐рд╕рдореЗрдВ Attacker рд╡реЗрдмрд╕рд╛рдЗрдЯ рдореЗрдВ JavaScript рдХреЛ Inject рдХрд░рддрд╛ рд╣реИ, рдЬрд┐рд╕рд╕реЗ рдпреВрдЬрд░ рдХрд╛ Data рдЪреЛрд░реА рд╣реЛ рд╕рдХрддрд╛ рд╣реИред**  

### ЁЯФе **рдХреИрд╕реЗ рд╣реЛрддрд╛ рд╣реИ XSS рдЕрдЯреИрдХ?**  
рдЕрдЧрд░ рдХреЛрдИ рд╡реЗрдмрд╕рд╛рдЗрдЯ **User Input рдХреЛ Validate рдирд╣реАрдВ рдХрд░рддреА** рдФрд░ рдЙрд╕реЗ Page рдкрд░ Direct Print рдХрд░ рджреЗрддреА рд╣реИ, рддреЛ JavaScript Injection рд╣реЛ рд╕рдХрддрд╛ рд╣реИред  

### тЭМ **Example (Vulnerable Code)**  
```html
<input type="text" name="comment" placeholder="Write a comment">
<div>
    User Comment: <script>alert('Hacked!');</script>
</div>
```
тЮбя╕П рдЕрдЧрд░ рдХреЛрдИ User **`<script>alert('Hacked!');</script>`** рдбрд╛рд▓ рджреЗрддрд╛ рд╣реИ, рддреЛ рдЙрд╕рдХрд╛ JavaScript Execute рд╣реЛ рдЬрд╛рдПрдЧрд╛!  

### тЬЕ **Solution (Secure Code - Input Sanitization & Encoding)**  
тЬФя╕П **User Input рдХреЛ Encode рдХрд░реЛ**  
тЬФя╕П **HTML Special Characters рдХреЛ Escape рдХрд░реЛ**  

```python
from flask import Flask, request, escape
app = Flask(__name__)

@app.route("/comment", methods=["POST"])
def comment():
    user_input = escape(request.form["comment"])  # Secure Input Handling
    return f"User Comment: {user_input}"
```

ЁЯСЙ **XSS рдХреЛ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП Content Security Policy (CSP) рдХреЛ Implement рдХрд░реЛред**  

---

## **2я╕ПтГг SQL Injection (SQLi) - Database Hack рдХрд░рдиреЗ рдХрд╛ рддрд░реАрдХрд╛**  
ЁЯТб **SQLi рдПрдХ рдРрд╕рд╛ рдЕрдЯреИрдХ рд╣реИ рдЬрд┐рд╕рдореЗрдВ Attacker рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреЗ Database рдХреЛ Manipulate рдХрд░рдХреЗ Sensitive Data рдЪреБрд░рд╛ рд╕рдХрддрд╛ рд╣реИред**  

### тЭМ **Vulnerable Code (Unsafe Query Execution)**  
```python
cursor.execute("SELECT * FROM users WHERE username = '" + username + "' AND password = '" + password + "'")
```
тЮбя╕П рдЕрдЧрд░ Attacker **`' OR '1'='1`** рдбрд╛рд▓рддрд╛ рд╣реИ, рддреЛ Login рд╣реЛ рдЬрд╛рдПрдЧрд╛ рдмрд┐рдирд╛ Password рдбрд╛рд▓реЗ!  

### тЬЕ **Solution (Use Prepared Statements & Parameterized Queries)**  
```python
cursor.execute("SELECT * FROM users WHERE username = %s AND password = %s", (username, password))
```

тЬФя╕П **SQL Injection рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП Input Validation рдФрд░ WAF (Web Application Firewall) рдХрд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЛред**  

---

## **3я╕ПтГг Cross-Site Request Forgery (CSRF) - Unauthorized Requests**  
ЁЯТб **CSRF рдПрдХ рдРрд╕рд╛ рдЕрдЯреИрдХ рд╣реИ рдЬрд┐рд╕рдореЗрдВ Hacker рдпреВрдЬрд░ рдХреЛ рдПрдХ Malicious Link рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░рд╡рд╛рдХрд░ рдЙрд╕рдХрд╛ Account Hack рдХрд░ рд╕рдХрддрд╛ рд╣реИред**  

### тЭМ **Vulnerable Example (No CSRF Protection)**  
рдЕрдЧрд░ рдХрд┐рд╕реА рд╡реЗрдмрд╕рд╛рдЗрдЯ рдкрд░ **Password Change рдХрд░рдиреЗ рдХрд╛ API Request рдХреБрдЫ рдРрд╕рд╛ рджрд┐рдЦрддрд╛ рд╣реИ:**  
```html
<form action="https://example.com/change-password" method="POST">
    <input type="hidden" name="new_password" value="hacked123">
</form>
```
тЮбя╕П рдЕрдЧрд░ рдпреВрдЬрд░ рдЗрд╕ рд▓рд┐рдВрдХ рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░ рджреЗрддрд╛ рд╣реИ, рддреЛ рдЙрд╕рдХрд╛ Password рдмрджрд▓ рд╕рдХрддрд╛ рд╣реИ!  

### тЬЕ **Solution (Use CSRF Tokens)**  
тЬФя╕П **рд╣рд░ Request рдореЗрдВ Unique Token рднреЗрдЬреЛ рдФрд░ Verify рдХрд░реЛред**  
тЬФя╕П **SameSite Cookies рдХреЛ Enable рдХрд░реЛред**  

---

## **4я╕ПтГг Server-Side Request Forgery (SSRF) - Backend Server рдХрд╛ Exploitation**  
ЁЯТб **SSRF рдЕрдЯреИрдХ рдореЗрдВ Attacker рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреЗ Server рдХреЛ рдЦреБрдж рд╣реА рдХрд┐рд╕реА Malicious URL рдкрд░ Request рднреЗрдЬрдиреЗ рдкрд░ рдордЬрдмреВрд░ рдХрд░ рд╕рдХрддрд╛ рд╣реИред**  

### тЭМ **Vulnerable Example**  
```python
url = request.GET.get('url')  # ЁЯЪи Direct Input рд╕реЗ URL Fetch рдХрд░рдирд╛ Unsafe рд╣реИ
response = requests.get(url)
```
тЮбя╕П рдЕрдЧрд░ Attacker **`http://localhost/admin`** рдбрд╛рд▓реЗ, рддреЛ рд╡реЛ Internal Services рдХреЛ рдПрдХреНрд╕реЗрд╕ рдХрд░ рд╕рдХрддрд╛ рд╣реИ!  

### тЬЕ **Solution (Whitelist Allowed Domains & Validate URLs)**  
тЬФя╕П **Allow рд╕рд┐рд░реНрдл рдХреБрдЫ Safe URLs**  
тЬФя╕П **Internal IPs рдХреЛ Block рдХрд░реЛ**  
тЬФя╕П **Firewall рдФрд░ Network Segmentation Implement рдХрд░реЛ**  

---

## **5я╕ПтГг IDOR (Insecure Direct Object Reference) - Unauthorized Data Access**  
ЁЯТб **IDOR рдЕрдЯреИрдХ рдореЗрдВ Attacker рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреЗ Hidden Parameters рдХреЛ рдмрджрд▓рдХрд░ рджреВрд╕рд░реЛрдВ рдХреЗ Private Data рдХреЛ Access рдХрд░ рд╕рдХрддрд╛ рд╣реИред**  

### тЭМ **Vulnerable URL Example**  
```
https://example.com/profile?id=1001  # рдЕрдЧрд░ Attacker рдЗрд╕реЗ 1002 рдХрд░ рджреЗ, рддреЛ рджреВрд╕рд░реЗ рдХрд╛ Data Access рдХрд░ рд╕рдХрддрд╛ рд╣реИ!
```

### тЬЕ **Solution (Implement Proper Authorization Checks)**  
тЬФя╕П **рд╣рд░ Request рдХреЗ рд╕рд╛рде User Authentication рдЪреЗрдХ рдХрд░реЛред**  
тЬФя╕П **User IDs рдХреЛ Encrypt рдХрд░реЛред**  

---

## **6я╕ПтГг Broken Authentication & Session Management**  
ЁЯТб **рдЕрдЧрд░ Authentication рдФрд░ Session Management рд╕рд╣реА рд╕реЗ Implement рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛, рддреЛ рдХреЛрдИ рднреА User Accounts рдХреЛ Takeover рдХрд░ рд╕рдХрддрд╛ рд╣реИред**  

тЬФя╕П **Best Practices:**  
тЬЕ **Multi-Factor Authentication (MFA) Enable рдХрд░реЛред**  
тЬЕ **Secure Session Cookies (HttpOnly, Secure, SameSite) рдпреВрдЬрд╝ рдХрд░реЛред**  
тЬЕ **Login Attempt Limits Set рдХрд░реЛред**  

---

## **7я╕ПтГг Security Misconfigurations**  
ЁЯТб **рдЕрдЧрд░ Web Server рдпрд╛ Database рд╕рд╣реА рд╕реЗ Configure рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛, рддреЛ Attacker рдЗрд╕рдХрд╛ рдлрд╛рдпрджрд╛ рдЙрдард╛ рд╕рдХрддрд╛ рд╣реИред**  

тЬФя╕П **Avoid Common Mistakes:**  
тЭМ **Default Credentials (Admin:Admin) рдордд рд░рдЦреЛред**  
тЭМ **Error Messages рдореЗрдВ Sensitive Data рдордд рджрд┐рдЦрд╛рдУред**  
тЭМ **Debug Mode рдХреЛ Live Server рдкрд░ Enable рдордд рдХрд░реЛред**  

тЬФя╕П **Secure Configuration Checklist:**  
тЬЕ Unused Features рдХреЛ Disable рдХрд░реЛ  
тЬЕ Security Headers (CSP, X-Frame-Options) Enable рдХрд░реЛ  
тЬЕ Regular Security Audits рдХрд░реЛ  

---

## **ЁЯФН Summary (рд╕рдВрдХреНрд╖реЗрдк рдореЗрдВ)**  
тЬЕ **Web Security рдореЗрдВ рдХрдИ Common Vulnerabilities рд╣реЛрддреА рд╣реИрдВ, рдЬрд┐рдирдХрд╛ Hackers рдлрд╛рдпрджрд╛ рдЙрдард╛ рд╕рдХрддреЗ рд╣реИрдВред**  
тЬЕ **XSS, SQL Injection, CSRF, SSRF, рдФрд░ IDOR рдЬреИрд╕реА рдХрдордЬреЛрд░рд┐рдпреЛрдВ рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП Input Validation рдФрд░ Secure Coding Practices рдЕрдкрдирд╛рдиреА рдЪрд╛рд╣рд┐рдПред**  
тЬЕ **Proper Authentication, CSRF Tokens, рдФрд░ Security Headers Implement рдХрд░рдиреЗ рд╕реЗ рдЗрди Attacks рдХреЛ рд░реЛрдХрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИред**  

---

## **ЁЯФЬ Next Chapter: Finding & Reporting Bugs (Bug Bounty рдХреИрд╕реЗ рдХрд░реЗрдВ?)**  
рдЕрдм рдЕрдЧрд▓реЗ Chapter 4 рдореЗрдВ рд╣рдо рд╕реАрдЦреЗрдВрдЧреЗ рдХрд┐ **Real-World рдореЗрдВ Bug Bounty рдХреИрд╕реЗ рдХрд░рддреЗ рд╣реИрдВ, Tools & Platforms рдХреМрди-рдХреМрди рд╕реЗ рд╣реИрдВ, рдФрд░ рдХреИрд╕реЗ Responsible Disclosure Report рдмрдирд╛рддреЗ рд╣реИрдВ!** ЁЯЪА  

### **тЭУ рдХреЛрдИ рд╕рд╡рд╛рд▓ рд╣реЛ рддреЛ рдмрддрд╛рдУ?** ЁЯШК
